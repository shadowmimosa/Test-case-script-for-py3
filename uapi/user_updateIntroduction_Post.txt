*** Settings ***
Documentation     user/updateIntroduction 20190311修改个人简介
Resource          ../Public/public_lib.txt    #Library    Collections    #Library    RequestsLibrary    #Library    pymysql
...               #Library    DatabaseLibrary    #Library    String    #Library    HttpLibrary.HTTP    #Library
...               # ../Public/Lib/tools_library.py

*** Variable ***
${pwd}            xy000000    # 密码
${userName}       15435124    # 默认的用户名
${ContentType}    application/x-www-form-urlencoded;charset=UTF-8    # POST数据格式

*** Test Cases ***    introduction       ret                                      msg
Class_01              [Documentation]    user/updateIntroduction TestCase测试用例
                      [Tags]             Test                                     txy    Online    v4.7    auto_v1
                      [Template]         user_updateIntroduction_Post_Keywords
                      跑步大咖！                 0                                        成功
Class_02              [Documentation]    敏感词user/updateIntroduction TestCase测试用例
                      [Tags]                                                  txy    Online    v4.7    auto_v1
                      [Template]         user_updateIntroduction_Post_Keywords
                      微商                 -1                                        保存的内容包含敏感词，请更换后重试					  

*** Keywords ***
user_updateIntroduction_Post_Keywords
    [Arguments]    ${introduction}    ${ret}    ${msg}
    [Documentation]    user/updateIntroduction 接口用例的Keywords关健字
    ######Evaluate    reload(sys)    sys
    ##Evaluate    sys.setdefaultencoding( "utf-8" )    sys
    #从配置的用户列表中随机取一个用户运行此用例
    #${userName}    Env_username
    ${path}=    set variable    /user/updateIntroduction
    ${maps}=    create dictionary
    set to dictionary    ${maps}    introduction=${introduction}
    log    ========输出接口URL：${user_URL}${path}
    log    ========接口的入参为：${userName}:${maps}==========
    ${resp}=    thejoyrun_postd    ${path}    ${maps}    ${userName}    ${user_URL}
    ${content}=    charconver    ${resp.content}
    log json    ${content}
    log    ======开始断言验证=====
    log    验证ret是否符合预期
    should contain    ${content}    "ret":"${ret}"
    log    ret 符合预期为:${ret}
    log    验证msg是否符合预期:${msg}
    should contain    ${content}    "msg":"${msg}"
    #当需要添加对data的内容进行单独验证时，可以以下方式
    #${data}    get json value    ${content}    /data
    log    验证OK！！用户${userName}；URL：${user_URL}${path}；传参：${maps}！！
