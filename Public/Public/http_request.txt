*** Settings ***
Library           Collections
Library           RequestsLibrary
Library           pymysql
Library           DatabaseLibrary
Library           String
Library           HttpLibrary.HTTP
Library           ../Lib/tool_reptile.py
Library           ../Lib/tools_library.py
Library           ../Lib/Usertool_01.py
*** Variable ***
${signOnline}          A4729E62-3701-48C3-A15D-7391838FA186    #可以放置一些公共参数；
${signTest}            a9ff6970eb814e6894389ca8b12f3030    #可以放置一些公共参数；
${pwd}                 67889911    #可以放置一些公共参数；
${loginTest}           http://api-test.thejoyrun.com
${loginOnline}         http://api.thejoyrun.com
${fxUrl}               http://fanxing.kugoucom
*** Keywords ***

sorted_request_data
    [Arguments]     ${map}    ${tpye}=None
    [Documentation]    将map请求的参数转换为字符串或json格式,type为编码类型,默认为unicode编码，decode为unicode解码（用于中文展示）； 
    [Timeout]    30 seconds
    log   sorted_request_data Start ......
    log  Map原字符：
    log  【${map}】
    ${map_list_before}    evaluate    sorted(${map}.iteritems())
    log  排序后：
    log  【${map_list_before}】   
    ${map_list_URL}   Evaluate    urllib.urlencode(${map_list_before})    urllib
    log  排序->URL编码后：
    log  【${map_list_URL}】   
    ${data_out_Unicode}   Convert To String   ${map_list_URL}
    log  排序->URL编码->unicode编码后：
    log  【${data_out_Unicode}】    
    ${data_out_display}    Evaluate    '${data_out_Unicode}'.decode('unicode_escape')
    log   排序->URL编码->unicode编码->unicode解码后：
    log   【${data_out_display}】
    ${data_out}  Run Keyword If  '${tpye}'=='decode'   
    ...     set variable  ${data_out_display}   ELSE
    ...     set variable  ${data_out_Unicode}
    log   sorted_request_data End ......
    [Return]    ${data_out}



joyrun_POST_heardsession
    [Arguments]    ${username}    ${pwd}   ${Base_URL}=None
    [Documentation]    Joyrun login 
	[Timeout]    30 seconds
    log    -----------------cookies mothod is log start1;--------------------------
    log    -----------------cookies mothod is log start2;--------------------------
    ${env}    Env_URL    ${Base_URL}
    ${login_URL}    Run Keyword If   '${env}'=='Test'   set variable   ${loginTest}   ELSE   set variable   ${loginOnline}  
    log  运行环境是${login_URL}
    ${timestamp}    GetServertime    ${login_URL}
    ${Url}=    set variable    ${login_URL}
    ${loginUri}=    set variable    /user/login/normal
    ${pwdmd5}=    encrypt    ${pwd}    md5    32
    ${keydic}    create dictionary    deviceToken=${deviceToken}
    set to dictionary    ${keydic}    username=${username}    
    set to dictionary    ${keydic}    pwd=${pwdmd5}
    set to dictionary    ${keydic}    timestamp=${timestamp}
    #排序及格式处理
    ${signparam}    sorted_request_data    ${keydic}
    #对中文做处理，将unicode字符解码成对应的中文字符
    #log    signparam===${signparam}
    ${signkey1}=    set variable    ${signparam}${appkey1}
    ${signkey2}=    set variable    ${signparam}${appkey2}
    #log    signkey1=====${signkey1}
    #log    signkey2=====${signkey2}
    #排序及格式处理
    ${sign1}=    encrypt    ${signkey1}    md5    32
    ${sign2}=    encrypt    ${signkey2}    md5    32
    #通用签名
    ${sign1}    Run Keyword If   '${env}'!='Online'   set variable   ${signTest}   ELSE   set variable   ${APP_SGIN}
    ${_sign} =    Convert To Uppercase    ${sign1}
    log   通用签名：${_sign}
    ${signature} =    Convert To Uppercase    ${sign2}
    log    业务签名：${signature}
    ${header}    create dictionary    APPVERSION=${APPVERSION}
    set to dictionary    ${header}    User-Agent=${UserAgent}
    set to dictionary    ${header}    APP_DEV_INFO=${APPDEVINFO}
    set to dictionary    ${header}    Content-Type=application/x-www-form-urlencoded
    set to dictionary    ${header}    SYSVERSION=${SYSVERSION}
    set to dictionary    ${header}    _sign=${_sign}
    set to dictionary    ${header}    MODELTYPE=${MODELTYPE}
    log    登录前传参url=${Url}${loginUri}
    log    登录前的heard=${header}
    log    登录前的body=data=pwd=${pwdmd5}&timestamp=${timestamp}&username=${username}
    Create Session    joyrun    ${Url}    headers=${header}
    ${resplogin}=    post Request    joyrun    /user/login/normal    data=deviceToken=${deviceToken}&pwd=${pwdmd5}&signature=${signature}&timestamp=${timestamp}&username=${username}
    ${login_content}=    charconver    ${resplogin.content}
    ${login_ret}     Get Json Value   ${login_content}   /ret
    ${login_ret}     Replace String    ${login_ret}    "    ${EMPTY}
    ${login_error}   Run Keyword If   ${login_ret}!=0   Get Json Value   ${login_content}   /msg
    Run Keyword If   ${login_ret}==0   log json  ${login_content}       
    ...    ELSE   log    哈哈，在登录就出错了！！！！！失败原因:${login_error}
    ${userdata}   Get Json Value    ${login_content}    /data/user
    ${sid}    Get Json Value    ${login_content}    /data/sid
    ${uid}    Get Json Value    ${login_content}    /data/user/uid
    ${nick}    Get Json Value    ${login_content}    /data/user/nick
    ${ypcookie}    set variable    uid=${uid}&sid=${sid}
    ${ypcookie}=    Replace String    ${ypcookie}    "    ${EMPTY}
	${sid}=    Replace String    ${sid}    "    ${EMPTY}
    ${uid}=    Replace String    ${uid}    "    ${EMPTY}	
    ${nick}=    Replace String    ${nick}    "    ${EMPTY}   
    log    登录后用户基础信息为：nick==${nick}、uid==${uid}、sid==${sid}
    log    登录后的ypcookie==${ypcookie}
    log    登录后用户userinfo信息为：
    log json   ${userdata}
    ${heards_dict}=    create dictionary
    set to dictionary    ${heards_dict}    uid=${uid}
    set to dictionary    ${heards_dict}    sid=${sid}
    set to dictionary    ${heards_dict}    ypcookie=${ypcookie}
    set to dictionary    ${heards_dict}    timestamp=${timestamp}
    set to dictionary    ${heards_dict}    userinfo=${userdata}   
    Log Dictionary       ${heards_dict}
    log  将登录成功的用户信息设置为全局变量
    ${env}    Run keyword If    "${login_URL}"=="http://api-test.thejoyrun.com"    set variable    Test
    ...    ELSE    set variable    Online
    set to dictionary      ${usersinfo_dict}    ${env}${userName}=${heards_dict}
    set global variable    &{usersinfo_dict}    &{usersinfo_dict}
    log dictionary   ${usersinfo_dict} 
    log    -------------------------------heards_dict mothod is log End1 ---------
    log    -------------------------------heards_dict mothod is log End2 ---------
    [Return]    ${heards_dict}



Request_Gen
    [Arguments]    ${URL}   ${method}=None   ${map}=None   ${type}=None   ${heards}=None    
    [Documentation]    通用的http请求的方法; url为url的地址栏，method为Post,Get方法；Map为提交的参数和数据，此为json字典格式，type为提交数据的格式（data,pama);heards为请求头中的参数和值，此为json字典格式；
    [Timeout]    30 seconds
    log  URL为：${URL} 
    log  method为：${method} 
    log  map为：${map}
    log  type为：${type} 
    log  heards为：${heards} 

