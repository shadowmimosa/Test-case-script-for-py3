*** Settings ***
Documentation     JOYRUN的业务关键字
Library           Collections
Library           RequestsLibrary
Library           pymysql
Library           DatabaseLibrary
Library           String
Library           ../Lib/tools_library.py
Resource          ../Public/cookie_operation.txt
Resource          ../Public/http_request.txt
Resource          thejoyrun.txt

*** Variables ***
${password}       67889911    #可以放置一些公共参数；

*** Keywords ***

arraystoarray
    [Arguments]    ${lis1}    ${lis2}
    [Documentation]    将字符类型改为数组类型，例如变量值[[1000, 1462], [2000, 2310]] 与 [[23176204, 113335524, 293], [23177855, 113336562, 462]] 换成[1000,1462,23198402,113341642,2310]-[2000,2310,23207402,113343142,462]
    log    =======arraystoarray===============
    ${lis1}    replace string    ${lis1}    [[    ${EMPTY}
    ${lis2}    replace string    ${lis2}    [[    ${EMPTY}
    ${lis1}    replace string    ${lis1}    ]]    ${EMPTY}
    ${lis2}    replace string    ${lis2}    ]]    ${EMPTY}
    ${lis1}    replace string    ${lis1}    ],[    ;
    ${lis2}    replace string    ${lis2}    ],[    ;
    @{listt1}    Split String    ${lis1}    ;
    @{listt2}    Split String    ${lis2}    ;
    ${Listabc}    set variable    zzqrunjoyrun9527
    ${type}=    evaluate    type(${listt1})
    ${lens1}    evaluate    len(${listt1})
    ${lens2}    evaluate    len(${listt2})
    : FOR    ${index}    IN RANGE    0    ${lens1}
    \    ${list1}    set variable    ${listt1[${index}]}
    \    ${list2}    set variable    ${listt2[${index}]}
    \    ${listab}    set variable    [${list1},${list2}]
    \    ${Listabc}    set variable    ${Listabc}-${Listab}
    ${Listabcd}=    replace string    ${Listabc}    zzqrunjoyrun9527-    ${EMPTY}
    [Return]    ${Listabcd}

Getrunrecodeinfo
    [Arguments]    ${fid}    ${wgs}    ${userName}    ${pwd}=None
    [Documentation]    Run/GetInfo.aspx某跑步记录数据详情,如跑步记录不存在则，请求fid=181392202
    Evaluate    reload(sys)    sys
    Evaluate    sys.setdefaultencoding( "utf-8" )    sys
    ${path}=    set variable    /Run/GetInfo.aspx
    ${maps}=    create dictionary
    set to dictionary    ${maps}    fid=${fid}
    set to dictionary    ${maps}    wgs=${wgs}
    log    ---输出参数---
    log    ${maps}
    log    ---输出测试地址---
    log    ${api_URL}
    ${resp}=    thejoyrun_postd    ${path}    ${maps}    ${userName}    ${api_URL}   ${pwd}
    ${Getrunrecodecontent}=    charconver    ${resp.content}
    ${respret}    get json value    ${Getrunrecodecontent}    /ret
    #${respruninfo}    Run Keyword If    ${respret}<>"0"    Getrunrecodeinfo    181392202    ${wgs}    ${userName}
    ...    # ELSE    set variable    ${Getrunrecodecontent}
    ${respruninfo}    set variable    ${Getrunrecodecontent}
    log    ---输出返回内容----
    log json    ${respruninfo}
    [Return]    ${respruninfo}

feedListBasicBulk_fid
    [Arguments]    ${fids}    ${userName}    ${findtext}    ${min}    ${max}   ${pwd}=None
    [Documentation]    /feed/feedListBasicBulk批量获取话题中fid的基础数据，返回批量符合条件的跑步记录的fid串；findtext为条件字段，min,max 为条件值的最小最大值 左闭右开区间,findtext 支持两层过滤，如找run下的meter可写成run/meter
    ${path}=    set variable    /feed/feedListBasicBulk
    ${maps}=    create dictionary
    set to dictionary    ${maps}    fids=${fids}
    ${resp}=    thejoyrun_postd    ${path}    ${maps}    ${userName}    ${api_URL}    ${pwd}
    ${feedListBasicBulkcontent}=    charconver    ${resp.content}
    log    ---输出返回内容----
    log json    ${feedListBasicBulkcontent}
    @{findlist}    Split String    ${findtext}    /
    ${findlistlen}    evaluate    len(${findlist})
    ${findlistone}    Run Keyword If    ${findlistlen}>1    Get From List    ${findlist}    0
    ...    ELSE    set variable    ${findtext}
    ${findlisttwo}    Run Keyword If    ${findlistlen}>1    Get From List    ${findlist}    1
    ...    ELSE    set variable    ${findtext}
    ${feed}    set variable    zzqrunjoyrun9527
    ${feeddatas}    get json value    ${feedListBasicBulkcontent}    /datas
    ${feeddatas}    charconver    ${feeddatas}
    ${feeddatas}    replace string    ${feeddatas}    [{    {
    ${feeddatas}    replace string    ${feeddatas}    }]    }
    ${feeddatas}    replace string    ${feeddatas}    ${SPACE}    ${EMPTY}
    ${feeddatas}    replace string    ${feeddatas}    },{    }joyrunzzqtestspit{
    @{dataList}    Split String    ${feeddatas}    joyrunzzqtestspit
    : FOR    ${feeddata}    IN    @{dataList}
    \    log    ${feeddata}
    \    ${findoneValue}    Run Keyword If    ${findlistlen}>1    Get Regexp Matches    ${feeddata}    "${findlistone}":{(.*)}
    \    ...    1
    \    ...    ELSE    Get Regexp Matches    ${feeddata}    ("${findlistone}":.*),    1
    \    ${findoneValuelen}    evaluate    len(${findoneValue})
    \    ${findtxtvalue}    Run Keyword If    ${findoneValuelen}>0    Get From List    ${findoneValue}    0
    \    ...    ELSE    set variable    0
    \    ${findtxtvalue}    evaluate    r'${findtxtvalue}'
    \    ${findtwoValue}    Get Regexp Matches    ${findtxtvalue}    "${findlisttwo}":([0-9]+)    1
    \    ${findtwoValuelen}    evaluate    len(${findtwoValue})
    \    ${findvalue}    Run Keyword If    ${findtwoValuelen}>0    Get From List    ${findtwoValue}    0
    \    ...    ELSE    set variable    0
    \    ${fidtext}    Get Regexp Matches    ${feeddata}    "fid":([0-9]+)    1
    \    ${fidtextlen}    evaluate    len(${fidtext})
    \    ${feedfilter}    Run Keyword If    ${min}<=${findvalue}<=${max} and ${fidtextlen}>0    Get From List    ${fidtext}    0
    \    ...    ELSE    set variable    zzqrunjoyrun9527
    \    ${feed}    Run Keyword If    "${feed}"<>"${EMPTY}"    set variable    ${feed},${feedfilter}
    \    ...    ELSE    set variable    ${feedfilter}
    \    ${feed}    replace string    ${feed}    zzqrunjoyrun9527,    ${EMPTY}
    \    ${feed}    replace string    ${feed}    ,zzqrunjoyrun9527    ${EMPTY}
    ${Basicfid}    replace string    ${feed}    zzqrunjoyrun9527    ${EMPTY}
    ${BSfid}    Run Keyword If    '${Basicfid}'=='${EMPTY}'    set variable    0
    ...    ELSE    set variable    ${Basicfid}
    [Return]    ${BSfid}

getHotsFeedList_fids
    [Arguments]    ${page}    ${limit}    ${userName}   ${pwd}=None
    [Documentation]    getHotsFeedListt首页获取执门动态列表返回热度排名前列的fids串
    ${path}=    set variable    /newTopic/getHotsFeedList
    ${maps}=    create dictionary
    set to dictionary    ${maps}    page=${page}
    set to dictionary    ${maps}    limit=${limit}
    log    getHotsFeedList的userName= ${userName}
    ${resp}=    thejoyrun_getp    ${path}    ${maps}    ${userName}    ${topic_URL}   ${pwd}
    ${getHotsFeedListcontent}=    charconver    ${resp.content}
    log json    ${getHotsFeedListcontent}
    ${hotdata}    get json value    ${getHotsFeedListcontent}    /data
    ${hotdata}    replace string    ${hotdata}    [    ${EMPTY}
    ${hotdata}    replace string    ${hotdata}    ]    ${EMPTY}
    ${hotdata}    replace string    ${hotdata}    {    ${EMPTY}
    ${hotdata}    replace string    ${hotdata}    }    ${EMPTY}
    @{hostlist}=    Split String    ${hotdata}    ,
    ${keykeysting}=    set variable    zzqrunjoyrun9527
    ${lens}=    evaluate    len(${hostlist})
    : FOR    ${index}    IN RANGE    2    ${lens}    3
    \    ${hotdic}    Get From List    ${hostlist}    ${index}
    \    ${hotdic}    replace string    ${hotdic}    "fid":    ${EMPTY}
    \    ${hotdic}    replace string    ${hotdic}    ${SPACE}    ${EMPTY}
    \    ${keykeysting}    Run Keyword If    '${keykeysting}'<>'${EMPTY}'    set variable    ${keykeysting},${hotdic}
    \    ...    ELSE    set variable    ${hotdic}
    \    ${hotfids}    replace string    ${keykeysting}    zzqrunjoyrun9527,    ${EMPTY}
    \    ${hotfids}    replace string    ${keykeysting}    ,zzqrunjoyrun9527    ${EMPTY}
    ${hotfids}    convert to string    ${hotfids}
    ${hotfids}    replace string    ${hotfids}    {SPACE}    ${EMPTY}
    [Return]    ${hotfids}

FourTopicList_TopicName
    [Arguments]    ${userName}    ${pwd}=None
    [Documentation]    getFourTopicList获取置顶新话题,随机选中某热门话题,返回4个热门话题中的一个和约定跑话题；
    ${path}=    set variable    /newTopic/getFourTopicList
    ${maps}=    create dictionary
    ${resp}=    thejoyrun_getp    ${path}    ${maps}    ${userName}    ${topic_URL}   ${pwd}
    ${getFourTopicListcontent}=    charconver    ${resp.content}
    log json    ${getFourTopicListcontent}
    ${FourTopicdata}    get json value    ${getFourTopicListcontent}    /data
    ${FourTopicdata}    replace string    ${FourTopicdata}    [    ${EMPTY}
    ${FourTopicdata}    replace string    ${FourTopicdata}    ]    ${EMPTY}
    ${FourTopicdata}    replace string    ${FourTopicdata}    ${SPACE}    ${EMPTY}
    @{FourTopicdatalist}    Split String    ${FourTopicdata}    },{
    log    ${FourTopicdatalist[0]}
    ${topicNameKeyspit}    set variable    约定跑
    ${topicLen}    evaluate    len(${FourTopicdatalist})
    : FOR    ${topindex}    IN RANGE    ${topicLen}
    \    ${TopfourList}    Get Regexp Matches    ${FourTopicdatalist[${topindex}]}    "topicName":"(.*)"    1
    \    log    ${TopfourList[0]}
    \    ${topicNamesting}    Get From List    ${TopfourList}    0
    \    ${topicNameKeyspit}    Run Keyword If    "${topicNameKeyspit}"<>"${EMPTY}"    set variable    ${topicNameKeyspit},${topicNamesting}
    \    ...    ELSE    set Variables    ${topicNamesting}
    #${topicNameKeyspit}    replace string    ${topicNameKeyspit}    约定跑,    ${EMPTY}
    ${topicNameKeyspit}    convert to string    ${topicNameKeyspit}
    ${topicName}    randomchoice    ${topicNameKeyspit}    ,
    [Return]    ${topicName}

TopicDetail_Fids
    [Arguments]    ${topicName}    ${page}    ${type}    ${userName}    ${timelen}   ${pwd}=None
    [Documentation]    /newTopic/topicDetail获取话题的跑步列表返回fids串，type:1代表该话题的热门列表，type:2代表该话题的最新列表,timelen 表示多少时间内的记录秒为单位；
    log    ================topicName:${topicName}=============
    Run Keyword If    ${type}==1    log    ================话题的热门列表=============
    ...    ELSE    log    ================话题的最新列表=============
    ${firstFeedDateline}    set variable    0
    ${time}=    Get Time    epoch
    ${timemin}    evaluate    int(${time})-${timelen}
    ${timemax}    evaluate    int(${time})
    ${path}=    set variable    /newTopic/topicDetail
    ${maps}=    create dictionary
    set to dictionary    ${maps}    firstFeedDateline=${firstFeedDateline}
    set to dictionary    ${maps}    topicName=${topicName}
    set to dictionary    ${maps}    type=${type}
    set to dictionary    ${maps}    page=${page}
    log    ${topic_URL}
    ${TopicDetailresp}=    thejoyrun_postd    ${path}    ${maps}    ${userName}    ${topic_URL}  ${pwd}
    ${TopicDetailcontent}=    charconver    ${TopicDetailresp.content}
    log    ---输出返回内容----
    log json    ${TopicDetailcontent}
    ${feedscount} =    Get Count    ${TopicDetailcontent}    "feeds":[]
    ${TopicDetaildata}    Run Keyword If    ${feedscount}==0    get json value    ${TopicDetailcontent}    /data/feeds
    ...    ELSE    set variable    "fid":0
    ${Fids}    FilterList    ${TopicDetaildata}    dateline,${timemin},${timemax}    fid
    ${fidlen}    Run Keyword If    '${Fids}'<>'0'    Get Count    ${Fids}    ,
    ...    ELSE    set variable    -1
    ${fidnum}    evaluate    int(${fidlen})+1
    Run Keyword If    '${Fids}'=='0'    log    ================该话题type:${type}列表没有跑步记录=============
    ...    ELSE    log    ===返回====${fidnum}个======fid======
    [Return]    ${Fids}

FeedListv5_Fids
    [Arguments]    ${userName}   ${pwd}=None
    [Documentation]    我的动态列表
    Evaluate    reload(sys)    sys
    Evaluate    sys.setdefaultencoding( "utf-8" )    sys
    ${path}=    set variable    /feedListv5.aspx
    ${maps}=    create dictionary
    log    ---输出测试地址---
    log    ${api_URL}${path}
    ${resp}=    thejoyrun_postd    ${path}    ${maps}    ${userName}    ${api_URL}   ${pwd}
    ${content}    charconver    ${resp.content}
    log json    ${content}
    ${feeddatas}    get json value    ${content}    /datas
    ${feeddatas}    charconver    ${feeddatas}
    ${feeddatas}    replace string    ${feeddatas}    [{    {
    ${feeddatas}    replace string    ${feeddatas}    }]    }
    ${feeddatas}    replace string    ${feeddatas}    ${SPACE}    ${EMPTY}
    ${feeddatas}    replace string    ${feeddatas}    },{    }zzqrunjoyrun9527{
    @{feeddatasList}    Split String    ${feeddatas}    zzqrunjoyrun9527
    ${feed}    set variable    zzqrunjoyrun9527
    ${CountLen}    evaluate    len(${feeddatasList})
    : FOR    ${index}    IN RANGE    0    ${CountLen}
    \    ${feedabc}    Get From List    ${feeddatasList}    ${index}
    \    ${feedabcd}    Get Regexp Matches    ${feedabc}    "fid":([0-9]+)    1
    \    ${feedlen}    evaluate    len(${feedabcd})
    \    ${feeds}    Run Keyword If    ${feedlen}>=1    Get From List    ${feedabcd}    0
    \    ...    ELSE    set variable    zzqrunjoyrun9527
    \    ${feed}    Run Keyword If    "${feed}"<>"${EMPTY}"    set variable    ${feed},${feeds}
    \    ...    ELSE    set variable    ${feeds}
    \    ${feed}    replace string    ${feed}    zzqrunjoyrun9527,    ${EMPTY}
    \    ${feed}    replace string    ${feed}    ,zzqrunjoyrun9527    ${EMPTY}
    \    ${feed}    replace string    ${feed}    zzqrunjoyrun9527    ${EMPTY}
    ${fidv5}    Run Keyword If    '${feed}'=='${EMPTY}'    set variable    0
    ...    ELSE    set variable    ${feed}
    [Return]    ${fidv5}

UserRunList_Fid
    [Arguments]       ${userName}    ${filters}    ${Returnfield}   ${pwd}=None
    [Documentation]    userRunList用户本人的跑步记录基本验证,year 年份，filters 为过滤规则格式:lasttime,1521603644,1621603644,表示查找字段lasttime的值在1521603644-1621603644之间的记录，多个过滤条件用/隔开，最多支持三个条件；Returnfield为需要返回的字段值，例如：fid则返回符合条件的fid值；
    Evaluate    reload(sys)    sys
    Evaluate    sys.setdefaultencoding( "utf-8" )    sys
    ${path}=    set variable    /userRunList.aspx
    ${time}=    Get Time    epoch
    log    time= ${time}
    ${dateline}=    convert to string    ${time}
    ${lasttime}=    set variable    0
    log    lasttime=${lasttime}
	${year}  Get Time   year
    ${maps}=    create dictionary
    set to dictionary    ${maps}    dateline=${dateline}
    set to dictionary    ${maps}    year=${year}
    set to dictionary    ${maps}    lasttime=${lasttime}
    log    ---输出参数---
    log    ${api_URL}${maps}
    ${resp}=    thejoyrun_postd    ${path}    ${maps}    ${userName}    ${api_URL}   ${pwd}
    ${content}=    charconver    ${resp.content}
    log json    ${content}
    ${RunList}    get json value    ${content}    /datas
    ${runfid}    FilterList    ${RunList}    ${filters}    ${Returnfield}
    ${fidRun}    Run Keyword If    '${runfid}'=='${EMPTY}'    set variable    0
    ...    ELSE    set variable    ${runfid}
    [Return]    ${fidRun}



oneclickdetails_userinfo
    [Arguments]    ${returnfield}    ${userName}  ${pwd}=None
    [Documentation]    通过userName 返回用户相关字段信息；all返回datas中所有字段的值；uid:返回uid；address:返回地址；nick返回昵称；name返回真实姓名；province返回省份；city返回地区；cellnumber返回电话号码；email返回邮箱；birthday返回生日YYYYMMDD；
    Evaluate    reload(sys)    sys
    Evaluate    sys.setdefaultencoding( "utf-8" )    sys
    ${option}=    set variable    get
    ${path}=    set variable    /oneclickdetails.aspx
    ${maps}=    create dictionary
    set to dictionary    ${maps}    option=${option}
    log    ---输出参数---
    log    ${api_URL}${maps}
    ${resp}=    thejoyrun_postd    ${path}    ${maps}    ${userName}    ${api_URL}   ${pwd}
    ${content}=    charconver    ${resp.content}
    log json    ${resp.content}
    ${fieldvalue}    Run Keyword If    '${returnfield}'=='all'    get json value    ${content}    /datas
    ...    ELSE    get json value    ${content}    /datas/${returnfield}
    [Return]    ${fieldvalue}

getMyCrewInfo
    [Arguments]   ${returnfield}  ${userName}      ${pwd}=None
    [Documentation]    getMyCrewInfo返回本人跑团相关信息,crewid返回跑团id,uid返回uid,nodeType返回nodeType,adminLevel返回adminLevel,jointime返回加入跑团时间,totalmember返回跑成员数，endNodeid返回endNodeid，role返回roleid,all返回datas中所有字段的值
    Evaluate    reload(sys)    sys
    Evaluate    sys.setdefaultencoding( "utf-8" )    sys
    ${path}=    set variable    /structure/getMyCrewInfo
    ${maps}=    create dictionary
    log    ============${crew_muilt_URL}${path},map:${maps}==============
    ${resp}=    thejoyrun_postd    ${path}    ${maps}    ${userName}    ${crew_muilt_URL}  ${pwd}
    ${content}=    charconver    ${resp.content}
    log json    ${resp.content}	
	${data}     get json value    ${content}    /data
    ${fieldvalue}    Run Keyword If    '${returnfield}'=='all' and '${data}'<>'${EMPTY}'   set variable    ${data}    ELSE IF  '${data}'=='${EMPTY}'  set variable   0      ELSE    get json value    ${content}    /data/${returnfield}
    [Return]    ${fieldvalue}	
	
check_runfeed
    [Arguments]    ${fids}    ${userName}   ${pwd}=None
    [Documentation]    check/run查询跑步记录是不是发过动态
    [Timeout]    10 seconds
    Evaluate    reload(sys)    sys
    Evaluate    sys.setdefaultencoding( "utf-8" )    sys
    @{fidList}    Split String    ${fids}    ,
    ${postRunId}    set variable    0
    ${fidlen}    Evaluate    len(${fidList})
    ${fid}    Run Keyword If    ${fidlen}>0    Get From List    ${fidList}    0
    ...    ELSE    set variable    0
    ${fids}    Removesting    ${fids}    ${fid}    ,
    ${path}=    set variable    /feed/check/run
    ${maps}=    create dictionary
    set to dictionary    ${maps}    fid=${fid}
    set to dictionary    ${maps}    postRunId=${postRunId}
    log    ---输出参数---
    log    ${api_URL}${maps}
    ${resp}=    thejoyrun_postd    ${path}    ${maps}    ${userName}    ${api_URL}  ${pwd}
    ${content}=    charconver    ${resp.content}
    ${ret}=    get json value    ${content}    /ret
    ${istrue}    Run Keyword If    ${ret}=="0"    get json value    ${content}    /data/existFeed
    ...    ELSE IF    ${ret}=="10097"    set variable    2
    ...    ELSE    set variable    0
    ${istrue}    Convert To String    ${istrue}
    ${passfid}   Run Keyword If    '${istrue}'=='false'    set variable    ${fid}
    ...    ELSE IF    '${istrue}'=='true' and '${fids}'<>'${EMPTY}'    check_runfeed    ${fids}    ${userName}  ${pwd}
    ...    ELSE IF    '${istrue}'=='true' and '${fids}'=='${EMPTY}'    set variable    0
    ...    ELSE   set variable    0
    [Return]    ${passfid}

challengeList_filters
    [Arguments]   ${filters}    ${Returnfield}    ${userName}   ${pwd}=None
    [Documentation]    challenge/challengeList挑战活动，返回uid和活动ID串，以list形式返回，第1个为活动ID串，第2个为uid
    ${uid}    oneclickdetails_userinfo    uid    ${userName}
    ${path}=    set variable    /challenge/challengeList
    ${maps}=    create dictionary
    set to dictionary    ${maps}    uid=${uid}
    ${resp}=    thejoyrun_getp    ${path}    ${maps}    ${userName}    ${challenge_URL}  ${pwd}
    ${content}=    charconver    ${resp.content}	
	${challengelists}   get json value    ${content}   /data
	${challenge}   FilterList    ${challengelists}    ${filters}    ${Returnfield}
	[Return]    ${challenge}   ${uid}
	
classList_classids
    [Arguments]    ${dataType}   ${filters}   ${Returnfield}   ${userName}   ${pwd}=None
    [Documentation]    /class/list跑班列表,dataType:1为普通跑班列表，2：为官方推荐列表；filters过滤条件；Returnfield需要返回的字段
	${pageNum}  set variable    0
    ${path}=    set variable     /class/list
    ${maps}=    create dictionary
    set to dictionary    ${maps}    dataType=${dataType}
    set to dictionary    ${maps}    pageNum=${pageNum}
    ${resp}=    thejoyrun_getp    ${path}    ${maps}    ${userName}    ${bet_URL}   ${pwd}
    ${content}=    charconver    ${resp.content}
    log json    ${content}
	${classlists}   get json value    ${content}   /data
	${Returnfieldvalues}   FilterList    ${classlists}    ${filters}    ${Returnfield}  
	[Return]    ${Returnfieldvalues}	
	
	
marathonlist_marathonIds
    [Arguments]   ${filters}    ${Returnfield}     ${userName}     ${pwd}=None
    [Documentation]    marathon/online-mls-list 线上马的列表
    Evaluate    reload(sys)    sys
    Evaluate    sys.setdefaultencoding( "utf-8" )    sys
    ${path}=    set variable    /marathon/online-mls-list
    ${maps}=    create dictionary
    log    ========输出接口入参：${marathon_URL}${maps}==========
    ${resp}=    thejoyrun_postd    ${path}    ${maps}    ${userName}    ${marathon_URL}    ${pwd}
    ${content}=    charconver    ${resp.content}
    log json    ${content}	
	${marathonlists}   get json value    ${content}   /data
	${marathonIds}   FilterList    ${marathonlists}    ${filters}    ${Returnfield}
	[Return]    ${marathonIds}	
	
Get_shoe_id
    [Arguments]       ${userName}    ${pwd}=None
    [Documentation]    通过调brand-list和brand-shoe-list 接口随机选中一个shoe_id的公共Keywords关健字
    Evaluate    reload(sys)    sys
    Evaluate    sys.setdefaultencoding( "utf-8" )    sys
	${page}     set variable    1
	${pagesize}     set variable    200
    ${path}=    set variable    /brand-list
    ${maps}=    create dictionary
    set to dictionary    ${maps}    page=${page}
    set to dictionary    ${maps}    pagesize=${pagesize}
    log    ========输出接口URL：${wear_URL}${path}
    log    ========接口的入参为：${maps}==========
    ${resp}=    thejoyrun_postd    ${path}    ${maps}    ${userName}    ${wear_URL}   ${pwd}
    ${content}=    charconver    ${resp.content}
    log json    ${content}
	${brandIdlists}   get json value    ${content}   /data
	${brandIds}   FilterList    ${brandIdlists}    disp_order,10,2000    brand_id
	${brand_id}    Run Keyword If  ${brandIds}<>0    randomchoice   ${brandIds}  ,   ELSE    set variable   12
	${path1}=    set variable    /brand-shoe-list
	${page}    set variable    1
	${pagesize}    set variable    10
	${sortType}    set variable    1	
    ${maps1}=    create dictionary
    set to dictionary  ${maps1}  brand_id=${brand_id}
    set to dictionary  ${maps1}  page=${page}
    set to dictionary  ${maps1}  pagesize=${pagesize}
    set to dictionary  ${maps1}  sortType=${sortType}
    log    ========输出接口URL：${wear_URL}${path1}
    log    ========接口的入参为：${maps1}==========
    ${resp1}=    thejoyrun_postd    ${path1}    ${maps1}    ${userName}    ${wear_URL}   ${pwd}
    ${content1}=    charconver    ${resp1.content}
    log json    ${content1}
	${shoe_idlist}   get json value    ${content1}   /data
	${shoe_ids}   FilterList    ${shoe_idlist}    avg_score,3,4.9    shoe_id
	${shoe_id}    Run Keyword If  ${shoe_ids}<>0    randomchoice   ${shoe_ids}  ,   ELSE    set variable   2909
	[Return]    ${shoe_id}	
	
Getmyclassid
    [Arguments]    ${userName}  ${pwd}   ${isall}=None
    [Documentation]    /user/my/mission获取参加中的跑班id,如没有则返回0；如有正在进行中的跑班且isall不为空时返回data,否则返回classId；
    ${path}=    set variable    /user/my/mission
    ${maps}=    create dictionary
    log    ======${bet_URL}${path}
    ${resp}=    thejoyrun_getp    ${path}    ${maps}    ${userName}    ${bet_URL}   ${pwd}
    ${content}=    charconver    ${resp.content}
    log json    ${content}	
	${data}    get json value    ${content}    /data   
	log  isall===${isall}====
	${myclassid}   Run Keyword If    '${data}'=='null'  set variable   0    ELSE IF  ${isall} is None   get json value  ${data}  /classId   ELSE  set variable   ${data}
	[Return]    ${myclassid} 
	
Getmywallet
    [Arguments]     ${userName}   ${pwd}   ${field}   ${isall}=None
    [Documentation]    wallet/getUserBalanceAmount 个人钱包信息,field为需要返回的字段：balanceAmount(钱包余额)，mobile(手机号码)，status（1：正常,0:冻结），uid，withdrawAmount（可提现金额）
    Evaluate    reload(sys)    sys
    Evaluate    sys.setdefaultencoding( "utf-8" )    sys
    #从配置的用户列表中随机取一个用户运行此用例
    #${userName}    Env_username
    ${path}=    set variable    /wallet/getUserBalanceAmount
    ${maps}=    create dictionary
    log    ========输出接口URL：${wallet_URL}${path}
    log    ========接口的入参为：${maps}==========
    ${resp}=    thejoyrun_Getp    ${path}    ${maps}    ${userName}    ${wallet_URL}   ${pwd}  
    ${content}=    charconver    ${resp.content}
    log json    ${content}	
	${data}    get json value    ${content}    /data
	${fieldvalue}   Run Keyword If   '${data}'=='null'  set variable   0    ELSE IF   ${isall} is None  get json value  ${data}  /${field}    ELSE   set variable   ${data}
	[Return]    ${fieldvalue} 	
	
	