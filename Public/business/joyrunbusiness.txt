*** Settings ***
Library           Collections
Library           RequestsLibrary
Library           pymysql
Library           DatabaseLibrary
Library           String
Library           ../Lib/tools_library.py
Resource          ../Public/cookie_operation.txt
Resource          ../Public/http_request.txt
Resource          thejoyrun.txt

*** Variables ***
${password}       67889911    #可以放置一些公共参数；

*** Keywords ***
env_username_randomchoice
    [Arguments]    ${env}
    [Documentation]    用于根据环境不同随机从用户列表中选择用户；用户列表在config.py中配置环境分为Test和Online
    ${usernamerand}    Run Keyword If    '${env}'=='Test'    randomchoice    ${Testuserlist}    ,
    ...    ELSE    randomchoice    ${Onlineuserlist}    ,
    log    ====环境为${env}======
    log    ====随机选中的用户为：${usernamerand}=====
    [Return]    ${usernamerand}

arraystoarray
    [Arguments]    ${lis1}    ${lis2}
    [Documentation]    将字符类型改为数组类型，例如变量值[[1000, 1462], [2000, 2310]] 与 [[23176204, 113335524, 293], [23177855, 113336562, 462]] 换成[1000,1462,23198402,113341642,2310]-[2000,2310,23207402,113343142,462]
    log    =======arraystoarray===============
    ${lis1}    replace string    ${lis1}    [[    ${EMPTY}
    ${lis2}    replace string    ${lis2}    [[    ${EMPTY}
    ${lis1}    replace string    ${lis1}    ]]    ${EMPTY}
    ${lis2}    replace string    ${lis2}    ]]    ${EMPTY}
    ${lis1}    replace string    ${lis1}    ],[    ;
    ${lis2}    replace string    ${lis2}    ],[    ;
    @{listt1}    Split String    ${lis1}    ;
    @{listt2}    Split String    ${lis2}    ;
    ${Listabc}    set variable    abcdefg19527egthejoyrun9898
    ${type}=    evaluate    type(${listt1})
    ${lens1}    evaluate    len(${listt1})
    ${lens2}    evaluate    len(${listt2})
    : FOR    ${index}    IN RANGE    0    ${lens1}
    \    ${list1}    set variable    ${listt1[${index}]}
    \    ${list2}    set variable    ${listt2[${index}]}
    \    ${listab}    set variable    [${list1},${list2}]
    \    ${Listabc}    set variable    ${Listabc}-${Listab}
    ${Listabcd}=    replace string    ${Listabc}    abcdefg19527egthejoyrun9898-    ${EMPTY}
    [Return]    ${Listabcd}

Getrunrecodeinfo
    [Arguments]    ${fid}    ${wgs}    ${userName}
    [Documentation]    Run/GetInfo.aspx某跑步记录数据详情
    Evaluate    reload(sys)    sys
    Evaluate    sys.setdefaultencoding( "utf-8" )    sys
    ${path}=    set variable    /Run/GetInfo.aspx
    ${maps}=    create dictionary
    set to dictionary    ${maps}    fid=${fid}
    set to dictionary    ${maps}    wgs=${wgs}
    log    ---输出参数---
    log    ${maps}
    log    ---输出测试地址---
    log    ${api_URL}
    ${resp}=    thejoyrun_postd    ${path}    ${maps}    ${userName}    ${api_URL}
    ${Getrunrecodecontent}=    charconver    ${resp.content}
    log json    ${resp.content}
    log    ---输出返回内容----
    log json    ${Getrunrecodecontent}
    [Return]    ${Getrunrecodecontent}

feedListBasicBulk
    [Arguments]    ${fids}    
    [Documentation]    /feed/feedListBasicBulk批量获取动态的基础信息，返回有跑步记录的fid；
    [Arguments]    ${fids}    ${userName}
    [Documentation]    /feed/feedListBasicBulk批量获取动态的基础信息接口；
    ${path}=    set variable    /feed/feedListBasicBulk
    ${maps}=    create dictionary
    set to dictionary    ${maps}    fids=${fids}
    ${resp}=    thejoyrun_postd    ${path}    ${maps}    ${userName}    ${api_URL}
    ${feedListBasicBulkcontent}=    charconver    ${resp.content}
    log    ---输出返回内容----
    log json    ${feedListBasicBulkcontent}
    ${feeddatas}    get json value    ${feedListBasicBulkcontent}    /datas
    ${feeddatas}    charconver    ${feeddatas}
    ${feeddatas}    replace string    ${feeddatas}    [{    {
    ${feeddatas}    replace string    ${feeddatas}    ]}    }
    ${feedabc}    Get Regexp Matches    ${feeddatas}    "run":(.*),    1
    ${lens}=    evaluate    len(${feedabc})
    ${feedabcd}    Get Regexp Matches    ${feeddatas}    "fid":(.*),${SPACE}"recommend"    1
    ${basifid}    Run Keyword If    ${lens}>0    set variable    ${feedabcd[0]}
    ...    ELSE    set variable    0
    [Return]    ${basifid}

getHotsFeedList
    [Arguments]    ${page}    ${limit}       
    [Documentation]    首页获取执门动态列表返回热度排名前列的fid
    [Arguments]    ${page}    ${limit}    ${userName}
    [Documentation]    getHotsFeedListt首页获取执门动态列表返回热度排名前列的fids
    ${path}=    set variable    /newTopic/getHotsFeedList
    ${maps}=    create dictionary
    set to dictionary    ${maps}    page=${page}
    set to dictionary    ${maps}    limit=${limit}
    log    getHotsFeedList的userName= ${userName}
    ${resp}=    thejoyrun_getp    ${path}    ${maps}    ${userName}    ${topic_URL}
    ${getHotsFeedListcontent}=    charconver    ${resp.content}
    log json    ${getHotsFeedListcontent}
	${hotdata}     get json value    ${getHotsFeedListcontent}    /data
	${hotdata}      replace string    ${hotdata}  [    ${EMPTY}
	${hotdata}      replace string    ${hotdata}  ]    ${EMPTY}
	${hotdata}      replace string    ${hotdata}  {    ${EMPTY}
	${hotdata}      replace string    ${hotdata}  }    ${EMPTY}	
	@{hostlist}=    Split String    ${hotdata}    ,
	${keykeysting}=  set variable    abcdefg19527egthejoyrun9898
	${lens}=      evaluate     len(${hostlist})
	:FOR    ${index}   IN RANGE  2   ${lens}  3
	\		${hotdic}     Get From List    ${hostlist}    ${index}
	\		${hotdic}     replace string    ${hotdic}    "fid":   	 ${EMPTY}
	\		${hotdic}     replace string    ${hotdic}    ${SPACE}   	 ${EMPTY}	
	\		${keykeysting}     set variable      ${keykeysting},${hotdic}
	${hotfids}   replace string    ${keykeysting}    abcdefg19527egthejoyrun9898,    ${EMPTY}
	${hotfids}  convert to string   ${hotfids} 
	${hotfids}   replace string    ${hotfids}    {SPACE}    ${EMPTY}
    [Return]    ${hotfids}	
	
	
FourTopicList_TopicName
    [Arguments]    ${userName} 
    [Documentation]    getFourTopicList获取置顶新话题,随机选中某热门话题；
    ${path}=    set variable    /newTopic/getFourTopicList
    ${maps}=    create dictionary
    ${resp}=    thejoyrun_getp    ${path}    ${maps}    ${userName}    ${topic_URL}
    ${getFourTopicListcontent}=    charconver    ${resp.content}
    log json    ${getFourTopicListcontent}	
	${FourTopicdata}     get json value    ${getFourTopicListcontent}    /data
	${FourTopicdata}      replace string    ${FourTopicdata}  [    ${EMPTY}
	${FourTopicdata}      replace string    ${FourTopicdata}  ]    ${EMPTY}
	${FourTopicdata}      replace string    ${FourTopicdata}  ${SPACE}    ${EMPTY}
	@{FourTopicdatalist}   Split String    ${FourTopicdata}    },{
	log  ${FourTopicdatalist[0]}
	${topicNameKeyspit}  set variable   约定跑
	${topicLen}   evaluate     len(${FourTopicdatalist})
	:FOR    ${topindex}   IN RANGE    ${topicLen}    
	\		${TopfourList}    	Get Regexp Matches      ${FourTopicdatalist[${topindex}]}    "topicName":"(.*)"     1
	\       log   ${TopfourList[0]}
	\		${topicNamesting}   Get From List    ${TopfourList}    0
	\		${topicNameKeyspit}   set variable    ${topicNameKeyspit},${topicNamesting} 
	#${topicNameKeyspit}   replace string    ${topicNameKeyspit}    约定跑,    ${EMPTY}
	${topicNameKeyspit}  convert to string   ${topicNameKeyspit} 	
    ${topicName}   randomchoice   ${topicNameKeyspit}  ,
    [Return]    ${topicName}	
	
TopicDetail_Fids
    [Arguments]    ${topicName}  ${firstFeedDateline}    ${page}  ${type}    ${userName}
    [Documentation]    /newTopic/topicDetail获取话题的跑步列表，type:1代表该话题的热门列表，type:2代表该话题的最新列表
    log    ================topicName:${topicName}=============
	Run Keyword If   ${type}==1  log    ================话题的热门列表=============   ELSE  log    ================话题的最新列表=============
    ${path}=    set variable    /newTopic/topicDetail
    ${maps}=    create dictionary
    set to dictionary    ${maps}    firstFeedDateline=${firstFeedDateline}
    set to dictionary    ${maps}    topicName=${topicName}
    set to dictionary    ${maps}    type=${type}
    set to dictionary    ${maps}    page=${page}
    log    ${topic_URL}
    ${TopicDetailresp}=    thejoyrun_postd    ${path}    ${maps}    ${userName}    ${topic_URL}
    ${TopicDetailcontent}=    charconver    ${TopicDetailresp.content}
    log    ---输出返回内容----
    log json    ${TopicDetailcontent}	
	${feedscount} =   Get Count   ${TopicDetailcontent}   "feeds":[]   
	${TopicDetaildata}   Run Keyword If  ${feedscount}==0  get json value    ${TopicDetailcontent}    /data/feeds   ELSE   set variable   "fid":0
	${TopicDetaildata}      replace string    ${TopicDetaildata}  [    ${EMPTY}
	${TopicDetaildata}      replace string    ${TopicDetaildata}  ]    ${EMPTY}
	${TopicDetaildata}      replace string    ${TopicDetaildata}  {    ${EMPTY}
	${TopicDetaildata}      replace string    ${TopicDetaildata}  ${SPACE}    ${EMPTY}
	@{FidList}   Split String    ${TopicDetaildata}    },
	log  FidList[0]======${FidList[0]}
	${fidsKeyspit}  set variable   约定跑
	${fidLen}   evaluate     len(${FidList})
	:FOR    ${fidindex}   IN RANGE  0  ${fidLen}    
	\		${TopicDetailList}    	Get Regexp Matches      ${FidList[${fidindex}]}    "fid":(.*)     1
	\		${fidsting}   Get From List    ${TopicDetailList}    0
	\		${fidsKeyspit}   set variable    ${fidsKeyspit},${fidsting} 
	${fidsKeyspit}   replace string    ${fidsKeyspit}    约定跑,    ${EMPTY}
	${fidsKeyspit}      replace string    ${fidsKeyspit}  }    ${EMPTY}
	${Fids}  convert to string   ${fidsKeyspit} 	
	Run Keyword If   '${Fids}'=='0'     log  ================该话题type:${type}列表没有跑步记录=============   ELSE  log    ===返回====${fidLen}个======fid======
    [Return]    ${Fids}	


