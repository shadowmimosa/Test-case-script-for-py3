*** Settings ***
Documentation     ec_api/order 接口脚本
Resource          ../Public/public_lib.txt

*** Variable ***
${pwd}            67889911    # 密码
${userName}       32519717    # 默认的用户名
${ContentType}    application/json;charset=UTF-8    # POST数据格式
#${app_version}    ios3.1.0

*** Test Cases ***    couponNumbers      customerInfo                                                                                                                                       distributionCode    skus                                                                      ret    msg
Class_01              [Documentation]    ec_api/order TestCase测试用例
                      [Tags]             auto_v1
                      [Template]         ec_api_order__Keywords
                      \[null\]           {"name":"王小玮","phone":"15600562956","address":{"country":"","province":"北京市","city":"北京市","district":"昌平区","address":"某个地方的某个地方","zipcode":""}}    ${EMPTY}            \[\{"skuId":9004686,"salesRuleId":111455,"quantity":1,"price":0.01\}\]    0      成功

*** Keywords ***
ec_api_order__Keywords
    [Arguments]    ${couponNumbers}    ${customerInfo}    ${distributionCode}    ${skus}    ${ret}    ${msg}
    [Documentation]    ec_api/order 接口用例的Keywords关健字
    Evaluate    reload(sys)    sys
    Evaluate    sys.setdefaultencoding( "utf-8" )    sys
    #从配置的用户列表中随机取一个用户运行此用例
    #${userName}    Env_username
    ${customerInfo}=    Evaluate    '${customerInfo}'.encode('utf-8')
    To Json    ${customerInfo}
    To Json    ${skus}
    log json    ${customerInfo}
    log json    ${skus}
    #${skus}=    Evaluate    '${skus}'.encode('utf-8')
    ${path}=    set variable    /ec_api/order
    ${maps}=    create dictionary
    set to dictionary    ${maps}    couponNumbers=${couponNumbers}
    set to dictionary    ${maps}    customerInfo=${customerInfo}
    set to dictionary    ${maps}    distributionCode=${distributionCode}
    set to dictionary    ${maps}    skus=${skus}
    log    ========输出接口URL：${ec_URL}${path}
    log    ========接口的入参为：${maps}==========
    log dictionary    ${maps}
    ${resp}=    thejoyrun_get_nosign    ${path}    ${maps}    ${userName}    ${ec_URL}
    ${content}=    charconver    ${resp.content}
    log json    ${content}
    log    ======开始断言验证=====
    log    验证ret是否符合预期
    should contain    ${content}    "ret":"${ret}"
    log    ret 符合预期为:${ret}
    log    验证msg是否符合预期:${msg}
    should contain    ${content}    "msg":"${msg}"
    #当需要添加对data的内容进行单独验证时，可以以下方式
    #${data}    get json value    ${content}    /data
    log    验证OK！！用户${userName}；URL：${ec_URL}${path}；传参：${maps}！！
